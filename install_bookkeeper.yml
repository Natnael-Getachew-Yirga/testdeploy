---
- name: Install Zookeeper on Zookeeper Servers
  hosts: zookeepers
  become: yes
  vars:
    java_version: "17"
    zookeeper_version: "3.8.4"
    zookeeper_install_dir: "/opt/zookeeper"
    zookeeper_data_dir: "/var/lib/zookeeper"
    zookeeper_myid: "{{ inventory_hostname.split('-')[1] }}"
    zookeeper_config: |
      tickTime=2000
      dataDir={{ zookeeper_data_dir }}
      clientPort=2181
      initLimit=5
      syncLimit=2
      server.1=10.0.0.11:2888:3888
      server.2=10.0.0.8:2888:3888
      server.3=10.0.0.5:2888:3888
  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes
    - name: Install required dependencies
      apt:
        name:
          - openjdk-{{ java_version }}-jdk
          - wget
          - tar
        state: present
    - name: Check if Zookeeper tarball exists
      stat:
        path: "/opt/apache-zookeeper-{{ zookeeper_version }}-bin.tar.gz"
      register: zookeeper_tarball
    - name: Remove existing Zookeeper tarball
      file:
        path: "/opt/apache-zookeeper-{{ zookeeper_version }}-bin.tar.gz"
        state: absent
      when: zookeeper_tarball.stat.exists
    - name: Download Zookeeper
      get_url:
        url: "https://downloads.apache.org/zookeeper/zookeeper-{{ zookeeper_version }}/apache-zookeeper-{{ zookeeper_version }}-bin.tar.gz"
        dest: "/opt/apache-zookeeper-{{ zookeeper_version }}-bin.tar.gz"
    - name: Extract Zookeeper
      unarchive:
        src: "/opt/apache-zookeeper-{{ zookeeper_version }}-bin.tar.gz"
        dest: "/opt/"
        remote_src: yes
    - name: Create symbolic link for Zookeeper
      file:
        src: "/opt/apache-zookeeper-{{ zookeeper_version }}-bin"
        dest: "{{ zookeeper_install_dir }}"
        state: link
    - name: Create Zookeeper data directory
      file:
        path: "{{ zookeeper_data_dir }}"
        state: directory
        owner: zookeeper
        group: zookeeper
    - name: Set Zookeeper myid
      lineinfile:
        path: "{{ zookeeper_data_dir }}/myid"
        line: "{{ zookeeper_myid }}"
        create: yes
    - name: Configure Zookeeper
      lineinfile:
        path: "{{ zookeeper_install_dir }}/conf/zoo.cfg"
        line: "{{ item }}"
      loop: "{{ zookeeper_config.split('\n') }}"
      notify:
        - restart zookeeper
  handlers:
    - name: restart zookeeper
      systemd:
        name: zookeeper
        state: restarted

- name: Install Apache BookKeeper on Bookie Servers
  hosts: bookies
  become: yes
  vars:
    java_version: "17"
    bookkeeper_version: "4.17.1"
    bookkeeper_install_dir: "/opt/bookkeeper"
    bookkeeper_data_dirs:
      - "/opt/bookkeeper/data/journal"
      - "/opt/bookkeeper/data/ledgers"
      - "/opt/bookkeeper/data/indexes"
    zookeeper_servers: "10.0.0.11:2181,10.0.0.8:2181,10.0.0.5:2181"
    bookkeeper_config: |
      # Zookeeper connection string
      zkServers={{ zookeeper_servers }}

      # Journal directory
      journalDirectory={{ bookkeeper_data_dirs[0] }}

      # Ledger directory
      ledgerDirectories={{ bookkeeper_data_dirs[1] }}

      # Index directory
      indexDirectories={{ bookkeeper_data_dirs[2] }}
  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes
    - name: Install required dependencies
      apt:
        name:
          - openjdk-{{ java_version }}-jdk
          - wget
          - tar
        state: present
    - name: Check if BookKeeper tarball exists
      stat:
        path: "/opt/bookkeeper-server-{{ bookkeeper_version }}-bin.tar.gz"
      register: bookkeeper_tarball
    - name: Remove existing BookKeeper tarball
      file:
        path: "/opt/bookkeeper-server-{{ bookkeeper_version }}-bin.tar.gz"
        state: absent
      when: bookkeeper_tarball.stat.exists
    - name: Download Apache BookKeeper
      get_url:
        url: "https://downloads.apache.org/bookkeeper/bookkeeper-{{ bookkeeper_version }}/bookkeeper-server-{{ bookkeeper_version }}-bin.tar.gz"
        dest: "/opt/bookkeeper-server-{{ bookkeeper_version }}-bin.tar.gz"
    - name: Extract Apache BookKeeper
      unarchive:
        src: "/opt/bookkeeper-server-{{ bookkeeper_version }}-bin.tar.gz"
        dest: "/opt/"
        remote_src: yes
    - name: Create symbolic link for BookKeeper
      file:
        src: "/opt/bookkeeper-server-{{ bookkeeper_version }}"
        dest: "{{ bookkeeper_install_dir }}"
        state: link
    - name: Create BookKeeper data directories
      file:
        path: "{{ item }}"
        state: directory
        owner: bookkeeper
        group: bookkeeper
      loop: "{{ bookkeeper_data_dirs }}"
    - name: Configure BookKeeper
      lineinfile:
        path: "{{ bookkeeper_install_dir }}/conf/bookkeeper.conf"
        line: "{{ item }}"
      loop: "{{ bookkeeper_config.split('\n') }}"
      notify:
        - restart bookkeeper
  handlers:
    - name: restart bookkeeper
      systemd:
        name: bookkeeper
        state: restarted